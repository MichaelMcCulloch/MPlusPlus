

module AbsExpr where

-- Haskell module generated by the BNF converter




data Expr = EAdd Expr Term | ETerm Term
  deriving (Eq, Ord, Show, Read)

data Term = TMul Term Factor | TFact Factor
  deriving (Eq, Ord, Show, Read)

data Factor = Num Integer
  deriving (Eq, Ord, Show, Read)

